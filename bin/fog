#!/usr/bin/env ruby
require File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib', 'fog'))
require 'irb'
require 'yaml'
Fog.credential = ARGV.first ? ARGV.first.to_sym : nil
Fog.mock! if ENV['FOG_MOCK']
if Fog.credentials.empty?
  begin
    Fog::Errors.missing_credentials
  rescue Fog::Errors::LoadError => error
    abort error.message
  end
end

require 'fog/bin'

providers = Fog.available_providers
providers = if providers.length > 1
  providers[0...-1].join(', ') << ' and ' << providers[-1]
else
  providers.first
end

if ARGV.length > 1

  require 'multi_json'

  result = instance_eval(ARGV[1..-1].join(' '))
  puts(MultiJson.encode(result))

else

  ARGV.clear # Avoid passing args to IRB
  IRB.setup(nil)
  @irb = IRB::Irb.new(nil)
  IRB.conf[:MAIN_CONTEXT] = @irb.context
  IRB.conf[:PROMPT][:FOG] = IRB.conf[:PROMPT][:SIMPLE].dup
  IRB.conf[:PROMPT][:FOG][:RETURN] = "%s\n"
  @irb.context.prompt_mode = :FOG
  @irb.context.workspace = IRB::WorkSpace.new(binding)

  Formatador.display_line('Welcome to fog interactive!')
  Formatador.display_line(":#{Fog.credential} provides #{providers}")
  providers = Fog.providers

  # FIXME: hacks until we can `include Fog` in bin
  CDN     = Fog::CDN
  Compute = Fog::Compute
  DNS     = Fog::DNS
  Storage = Fog::Storage

  catch(:IRB_EXIT) { @irb.eval_input }

end
